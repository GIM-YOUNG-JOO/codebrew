<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.mycompany.codebrew.dao.AccountDao">
	<insert id="insert" parameterType="Account">
		insert into account(acName, acId, acPassword, acTel, acEmail, acRole)
		values(#{acName}, #{acId}, #{acPassword}, #{acTel}, #{acEmail}, 'ROLE_USER')
	</insert>
	
	<select id="selectByAcId" parameterType="String" resultType="Account">
		select acId, acName, acPassword, acTel, acEmail, acRole
		from account
		where acId=#{acId}
	</select>
	
	<!-- 전화번호로 아이디 찾기 -->
    <select id="selectAcIdByAcTel" parameterType="map" resultType="Account">
        select acId
        from account
        where acName = #{acName} and acTel = #{acTel}
    </select>
	
	<!-- 아이디와 패스워드가 일치할 때 로그인 -->
	<!-- <select id="selectAcIdAndAcPassword" parameterType="Account" resultType="Account">
		select *
        from account
        where acId = #{acId} and acPassword = #{acPassword}
	</select> -->

	<!-- 이메일로 아이디 찾기 -->	
	
	<!-- 전화번호로 비밀번호 찾기 -->
	<select id="selectByAcIdAndAcNameAndAcEmail" parameterType="Account" resultType="Account">
		select *
		from account
		where acId = #{acId} and acTel = #{acTel} and acName = #{acName}
	</select>
	
	<!-- 이메일로 비밀번호 찾기 -->
	
	<select id="count" resultType="int">
		select count(*) from account
	</select>
	
	<select id="selectByPage" parameterType="Pager" resultType="Account">
		<![CDATA[
		select rnum, acId, acName, acPassword, acTel, acEmail, acRole
		from (
		    select rownum as rnum, acId, acName, acPassword, acTel, acEmail, acRole
		    from (
		        select acId, acName, acPassword, acTel, acEmail, acRole
		        from account
		        order by acId asc
		    )
		    where rownum <= #{endRowNo}
		)
		where rnum >= #{startRowNo}
		]]>
	</select>
	
	
	<update id="update" parameterType="Account">
		update account set
			acName=#{acName},
			acPassword=#{acPassword},
			acTel=#{acTel},
			acEmail=#{acEmail},
			acRole=#{acRole}
		where acId=#{acId}
	</update>
	
	<delete id="deleteByAcId" parameterType="String">
		delete
		from account
		where acId=#{acId}
	</delete>
	
	<update id="updatePassword" parameterType="Account">
		update account 
		set acpassword = #{acPassword}
		where acid = #{acId}
	</update>
	
	
	
</mapper>